% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compound-class.R
\docType{class}
\name{System-class}
\alias{System-class}
\alias{System}
\title{\code{Compound}}
\usage{
System(name, slots, contains = NULL, listable = TRUE)
}
\arguments{
\item{name}{Name of the class that is defined. The function throws an error
if the class has already been defined.}

\item{slots}{A named character vector. The slots the class should have.}

\item{contains}{a character vector. Possible inheritances.}

\item{listable}{logical. Should the class have a corresponding
"<classname>_list"-class. This allows you to define listable functions.}
}
\description{
\code{Compound}s are the objects we observe. They are most effective in
combination with \code{System}s which pose stronger conditions on their values.
Without a \code{System}, a \code{Compound} is little more than a template.
Systems
}
\details{
\code{System}s are the structure in which we observe \code{Compound}s. \code{Compound}s can
be the combination of several different \code{System}s. Systems are actually class
generators.

A similar framework to the bare definition of S4 classes is recommended. It
may be useful to define a new class for the slot value if there are more than
Atoms.
}
\examples{
.Humans <- System(name = "Humans", slots = c(id = "numeric",
                                            name = "character",
                                            height = "numeric"))
Humans <- function(id = NA_real_, name = NA_character_, height = NA_real_) {
  # Humans' id is unique but we trust that the name-height-combination is
  # unique as well.
  if(is.na(id) & (is.na(name) | is.na(height))) stop("Mix-up possible.")
  .Humans(id = id, name = name, height = height)
}
# We may now extend our definition of humans to collections of humans by
# considering Atoms.
}
