% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fx-fun-write-json.R, R/fx-fun-write.R
\name{fx_write_json}
\alias{fx_write_json}
\alias{fx_write}
\title{Effex functions: Write data}
\usage{
fx_write_json(data, path, ..., reader = NULL,
  write_params = list(pretty = TRUE, null = "null"))
}
\arguments{
\item{data}{either a metaframe or an object with attribute metaframe}

\item{path}{The path specifying the folder of the different objects}

\item{...}{A name-value pair of the name of the file and the respective
columns that are to be saved in that file}

\item{reader}{specify your own reader for the resulting \code{filepath} columns.}

\item{write_params}{A list of additional parameters for
\code{\link[jsonlite:write_json]{jsonlite::write_json()}}}
}
\description{
The \code{fx_write}-family will cover the transformation of semantic data to
human-readable documents. The idea behind this is the fact that semantic data
is more likely to be changed manually. From the perspective of version
control, this means that changes can most easily be tracked if one either
codes these decision or makes the files human-accessible. These formats are
also easier to work with for non-programmers so that, after a short
introduction, they can change this information, as well. Reviewing changes
via version control is transparent in this mode. \code{fx_change} will be
concerned with making change of semantical data available to non-programmers
in the future.
}
\section{Functions}{
\itemize{
\item \code{fx_write_json}: exports to a json format via \code{\link[jsonlite:toJSON]{jsonlite::toJSON()}}.
}}

