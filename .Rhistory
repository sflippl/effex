terms(f)
body(f)
args(f)
head(f)
global_env()
get_architecture()
set_architecture(arc1)
arc1$tst <- 1
arc1
arc1$tst
get_architecture
get_architecture()
get_architecture() %>% eval
get_architecture() %>% eval %>% tst
get_architecture() %>% eval %$% tst
library(magrittr)
get_architecture() %>% eval %$% tst
f
args(f)
list(args(f))
formals(f)
f(file = 1)
df <- data.frame(1:3)
df
tst <- "X1.3"
df$tst
df %>% tst
df %$% tst
?df
d <- df
d %$% tst
?`%$%`
install.packages("lobstr")
d-s <- 2
vdem__gdp_growth <- 2
vdem__gdp_growth
library(devtools)
?str_split
?split
library(stringr)
?str_split
spec1 <- "vdem-gdp_growth"
str_split(spec1, "-")
str_split(spec1, "-", 2)
str_split_fixed(spec1, "-", 2)
str_split_fixed(spec1, "__", 2)
str_split_fixed("v-w-q", "__", 2)
str_split_fixed("v-w-q", "-", 2)
ind <- structure(list(structure("gdp_growth", class = "vdem")), class = "indicator")
ind
ind <- structure(list(structure("gdp_growth", class = c("vdem", class("gdp_growth")))), class = "indicator")
ind
ind <- structure(list(structure("gdp_growth", class = c("vdem", class("gdp_growth")))), class = c("indicator", class(list())))
ind
character(NULL)
as.character(NULL)
use_test("indicator")
data.frame(a = 1:3, b = 1, c = 1:2)
data.frame(a = 1:3, b = 1:3)
data.frame(a = 1:3, b = 1)
data.frame(a = 1:4, b = 1:2)
tibble(a=1:4, b = 1:2)
library(tibble)
tibble(a=1:4, b = 1:2)
tibble(a=1:4, b = 1)
build()
check()
test()
document()
document()
tibble(a = 1:3, b = NULL)
tibble(a = 1:3, b = list(NULL))
tibble(a = 1:3, b = as.character(NULL))
tibble(a = 1:3, b = character(NULL))
tibble(a = 1:3, b = NULL)
tibble(a = 1:3, b = "")
tibble(a = 1:3, b = "")$b
tibble(a = 1:3, b = "")$a
?unite
library(dplyr)
?unite
library(tidyr)
?unite
?seq_len
ind <- "gdp_growth"
attributes(ind) <- tibble(file = "tst")
ind
attributes(ind) <- tibble(file = "tst", select = 1960)
ind
indicator <- function(name, source = "",
...) {
ind_tibble <- tibble(name = name, source = source, ...) %>%
unite(id, -name, remove = FALSE)
# id is now the identifier as we have already established that id may not be
# an attribute.
ret <- list(0)
for(i in seq_len(length(unique(ind_tibble$id)))) {
tmp_tibble <- ind_tibble %>% filter(id == unique(ind_tibble$id)[i])
ret[[i]] <- tmp_tibble$name
attributes(ret[[i]]) <- tmp_tibble[1, ] %>% select(-name, -id, -source)
class(ret[[i]]) <- c(tmp_tibble$source[1], class(ret[[i]]))
}
class(ret) <- c("indicator", class(ret))
}
document()
build()
test()
indicator(name = "gdp_growth", source = "vdem")
load_all()
indicator(name = "gdp_growth", source = "vdem")
indicator(name = "gdp_growth", source = "vdem") -> ind
ind
build()
test()
load_all()
?indicator
build()
load_all()
?indicator
document()
load_all()
?indicator
tibble(0)
tibble(name = character(0))
list()
list(0)
build(9)
build()
load_all()
test()
indicator(name = c("gdp_growth", "population"),
source = c("vdem", "worldbank"))
indicator(name = c("gdp_growth", "population"),
source = c("vdem", "worldbank")) -> ind
ind
build()
indicator(NULL)
document()
build()
load_all()
test()
load_all()
indicator(NULL)
indicator("gdp_growth", "vdem")
indicator("gdp_growth", "vdem") -> ind
ind
indicator
rm(indicator)
indicator(NULL)
indicator("gdp_growth", "vdem")
indicator("gdp_growth", "vdem", file = "tst")
indicator(c("gdp_growth", "population"), "vdem", file = "tst")
indicator(c("gdp_growth", "population"), c("vdem", "worldbank"), file = "tst")
test()
build()
test()
build()
?indicator
test()
build()
test()
magrittr::`%<>%`
indicator(NULL)
indicator()
indicator(name = "gdp_growth")
magrittr::`%<>%`
document()
build()
load_all()
indicator("gdp_growth")
build()
test()
build()
test()
library("assertthat", lib.loc="~/R/win-library/3.4")
install.packages("sf")
library(tectr)
indicator(NULL)
test()
library(tectr)
test()
indicator(name = "gdp_growth", source = "vdem", file = "this")
indicator(df = data.frame(name = "gdp_growth", source = "vdem", file = "this"))
library(tectr)
test()
indicator(df = data.frame(
name = "gdp_growth", source = "vdem", file = "this"))
library(tectr)
test()
indicator(df = data.frame(
name = as.character("gdp_growth"),
source = as.character("vdem"),
file = as.character("this")))
data.frame(
name = as.character("gdp_growth"),
source = as.character("vdem"),
file = as.character("this")))
data.frame(
name = as.character("gdp_growth"),
source = as.character("vdem"),
file = as.character("this"))
data.frame(
name = as.character("gdp_growth"),
source = as.character("vdem"),
file = as.character("this"))$name
?data.frame
test()
test()
indicator(name = "gdp_growth", source = "vdem",
file = c("this", "that"))
library(tectr)
test()
as_indicator(name = "gdp_growth", source = "vdem")
test()
as_indicator("vdem-gdp_growth")
as_indicator(name = "gdp_growth", source = "vdem")
as_indicator("vdem__gdp_growth")
as_indicator(c("vdem-gdp_growth", "worldbank-population"), file = "this")
as_indicator(c("vdem-gdp_growth", "worldbank-population"), file = c("this", "that"))
as_indicator("vdem-population")
as_indicator(name = "gdp_growth")
as_indicator.null(name = "gdp_growth")
as_indicator(c("population", "vdem-gdp_growth"))
test()
as_indicator.null(name = "gdp_growth")
as_indicator(name = "gdp_growth")
as_indicator(spec = NULL, name = "gdp_growth")
Q
library(tectr)
test()
as_indicator(name = "gdp_growth")
as_indicator.NULL(name = "gdp_growth")
as_indicator.NULL(spec = NULL, name = "gdp_growth")
as_indicator()
as_indicator(spec = NULL, name = "gdp_growth")
as_indicator(name = "gdp_growth")
as_indicator(1)
as_indicator(NULL, "gdp_growth")
as_indicator("gdp_growth")
as_indicator()
name
ret
as_indicator("gdp_growth")
as_indicator(name = "gdp_growth")
as_indicator(name = "gdp_growth")
library(tectr)
test()
test()
load_all()
install.packages("covr")
install.packages("covr")
covr::report()
test_check()
?test_check
?covr::test_check
library(devtools)
install_cran("covr")
library(covr)
install.packages("covr")
library(covr)
?codecov
?code_coverage
package_coverage()
load_all()
library(devtools)
load_all()
package_coverage()
internal
src <- c("", "")
src
src[src == ""] <- "composite"
src
library(tectr)
as_indicator("gdp_growth")
test()
library(tectr)
test()
test()
as_indicator("population")
indicator("population")
library(tectr)
test()
library(tectr)
as_indicator("gdp_growth")
library(tectr)
test()
as_indicator(c("vdem_gdp_growth", "worldbank_population", "fragility"))
as_indicator(c("vdem-gdp_growth", "worldbank-population", "fragility"))
?vapply
list(c("vdem", "vdem-type"), "worldbank", "vdem")
list(c("vdem", "vdem-type"), "worldbank", "vdem") -> tst
unlist(tst)
?match
library(tectr)
test()
test()
test()
ind_source(as_indicator("vdem-gdp_growth"))
ind <- as_indicator("vdem-gdp_growth")
ind
ind_source(ind)
class(ind)
class(ind[[1]])
class(ind[[1]]) -> ret
match(ret, "indicator_el")
?which
which(ret == "indicator_el")
library(tectr)
test()
?tidy
?clean
?inner.join
library(dplyr)
?inner_join
tibble
?lst_quos
?lst_
library(tectr)
test()
?variable
?get_variable
?tidy
?indicator
get_variable("vdem-gdp_growth")
variable()
library(tectr)
?full_join
library(dplyr)
?full_join
variable()
load_all()
devtools::load_all()
variable()
variable(id = 1:5, neg = -1:-5)
variable(id = 1:5, neg = -1:-5) -> tst
full_join(tst, variable(id = -2:1, neg = 2:-1))
full_join(tst, variable(id = -2:1, neg = 2:-1), by = "id")
full_join(tst, variable(id = -2:1, br = 2:-1))
full_join(tst, variable(id = -2:1, br = 2:-1)) %>% class
library(tectr)
library(tectr)
as_variable(tibble(id = 1:2, neg = -2:-1))
as_variable(id = 1:2, tibble(neg = -2:-1))
library(tectr)
as_variable(id = 1:2, tibble(neg = -2:-1))
as_variable(id = 1:2, tibble(neg = -2:-1)) %>% class
tst <- data.frame(a = 1:2, b = 1:2)
lapply(tst, function(x) -x)
lapply(tst, function(x) -x) %>% class
class(lapply(tst, function(x) -x))
library(tectr)
devtools::load_all()
variable(id = 1:2, x = 1:2)
variable(id = 1:2, x = 1:2) -> tst
tst$id
ncol(tst)
object <- tibble(x = 1:2)
library(dplyr)
object <- tibble(x = 1:2)
id = 1:2
assert_that(unique(length(id)) == length(id), length(id) == nrow(object))
object$id = structure(id, class = c("id", class(id)))
object
for(i in seq_len(ncol(object))) {
class(object[, i]) <- c(class(object[, i]), "variable_col")
}
object$id
object$x
class(object$x)
library(tectr)
library(tectr)
library(tectr)
library(tectr)
library(tectr)
library(tectr)
package?tidyselect
ret <- variable()
ret[, "id_country"] <- NA_character_
ret
rep(NA_character_, 0)
ret[, "id_country"] <- NA_character_ %>% rep(0)
ret[, "id_country"] <- rep(NA_character_,0)
ret
ret[, "id"] <- structure(NULL, class = "id")
ret
library(tectr)
variable()
inner_join(NULL, data.frame(a = 1))
library(dplyr)
inner_join(NULL, data.frame(a = 1))
use_test("variable")
library(devtools)
use_test("variable")
load_all()
variable()
tibble()
library(tectr)
variable()
class(variable())
variable(id = NULL, a = 1:3)
variable(id = 1:10, square = (1:10)^2)
variable(id = 1:10, square = (1:10)^2) -> tst
tst$id
is.data.frame(1:10)
select(tst, -id)
select(tst, -id) %>% class
ids(select(tst, -id))
ids(tst)
tst2 <- variable(id = tibble(family = 1:10,
role = rep(c("daughter", "son"), 5)),
age = 11:20,
income = seq(rep(0, 5), rep(-1000, 3), rep(1000, 2)))
tst2 <- variable(id = tibble(family = 1:10,
role = rep(c("daughter", "son"), 5)),
age = 11:20,
income = c(rep(0, 5), rep(-1000, 3), rep(1000, 2)))
tst2
ids(tst2)
class(tst2$family)
library(tectr)
tst2 <- variable(id = tibble(family = 1:10,
role = rep(c("daughter", "son"), 5)),
age = 11:20,
income = c(rep(0, 5), rep(-1000, 3), rep(1000, 2)))
library(tectr)
tst2 <- variable(id = tibble(family = 1:10,
role = rep(c("daughter", "son"), 5)),
age = 11:20,
income = c(rep(0, 5), rep(-1000, 3), rep(1000, 2)))
tst2
ids(tst2)
class(tst2)
class(tst2$family)
st_sf()
library(sf)
st_sf()
st_sf(geometry = NULL)
st_sf(geometry = st_sfc())
st_sf(geometry = st_sfc()) %>% select(-geometry)
test()
library(tectr)
variable()
tst <- variable(id = 1:10)
tmp <- tibble()
tmp
tmp[[id]] <- 1:10
tibble("a" = 1:10)
tibble("a" = 1:10)$a
library(tectr)
test()
variable(id = 1:10, a = 1:10)
library(tectr)
test)
test()
tst <- variable(id = 1:10, square = (1:10)^2)
tst
tst$square
library(tectr)
test()
ids(variable())
bind_rows(data.frame(a = 1), data.frame(b = 1))
library(tectr)
test()
?bind_rows
tst1 <- tibble(a = 1:3, b = c(1, 2, NA))
tst2 <- tibble(c = 1:3, b = c(1,2, NA))
inner_join(tst1, tst2)
full_join(tst1, tst2)
?inner_join
library(tectr)
library(tectr)
library(tectr)
indicator(name = "a", source = c("a", "b"))
library(tectr)
indicator(name = "a", source = c("a", "b"))
tibble(character(10))
library(dplyr)
tibble(character(10))
tibble(rep(NA, 10))
tibble(rep(NA, 11))
tibble(rep(NA, 11), 1)
tibble(rep(NA, 11), 1+1)
list(a = 1)
list(1)
list(a = 1)[[1]]
list(1)$a
list(a = 1)$a
names(list(1))
list(a=1, 2)
names(list(a=1, 2))
names(list(a=1, a=2))
list(a=1,a=2)$a
list(a=1,a=2)
list(a=1,a=2)$a
list(a=1,a=2)[[2]]
data.frame(a=1,a=2)
tibble(a=1,a=2)
c(a=1,b=2)
c(a=1,a=2)
c(a=1,a=2)["a"]
c(a=1,a=2)["a.1"]
c(a=1,a=2)[2]
tibble(a=1,a=2)
traceback()
tibble(a=1,a=2)$a
tibble(1,1)
tibble(1,2)
list(1)
list(1)[[""]]
names(list(1))
length(names(list(1)))
length(list(1))
